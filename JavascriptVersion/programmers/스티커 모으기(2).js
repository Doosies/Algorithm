const solution = sticker => {
  const stickerLen = sticker.length;
  const size = Math.floor(stickerLen / 2);
  let max = -1;

  for (let i = 0; i < stickerLen; i++) {
    let add = 0;
    for (let j = 0; j < size; j++) {
      let next = i + j * 2;
      if (next >= stickerLen) next -= stickerLen;
      add += sticker[next];
      console.log(next + 1);
    }
    console.log('-----------');
    max = max < add ? add : max;
  }

  console.log(stickerLen);
  return max;
};
const inp = [14, 6, 5, 11, 3, 9, 2, 10];
const inp2 = [1, 3, 2, 5, 4];
const inp3 = [1, 1, 1, 1, 1, 1, 1, 1, 1];
// console.log(solution(inp));
// console.log(solution(inp2));
console.log(solution(inp3));

// 1개 -> 1
// 2개 -> 1, 2 중 한개
// 3개 -> 1, 2, 3 중 한개
// 4개 -> 1, 3  2, 4  중 한개
// 5개 -> 1, 3 2, 4 3, 5 중 한개
// 6개 -> 1, 3, 5 2, 4, 6 중 한개
// 7개 -> 1, 3, 5 2, 4, 6
// 8개 -> 1, 3, 5, 7   2, 4, 6, 8
// 9개 ->
// 1, 3, 5, 7
// 1, 3, 5, 8
// 1, 3, 6, 8
// 1, 4, 6, 8

// 2, 4, 6, 8
// 2, 4, 6, 9
// 2, 4, 7, 9
// 2, 5, 7, 9

// 3, 5, 7, 9

// 10개 -> 1, 3, 5, 7, 9 2, 4, 6, 8, 10
// 1, 3, 5, 7, 9
// 2, 4, 6, 8, 10

// 짝수일땐 무조건 경우의수 2개 존재
// 홀수일땐 길이만큼 존재

// 10만1개 -> 5만 * 10만
// 50000000000

// 15개 ->
// 1, 3, 5, 7, 9, 11, 13
// 2, 4, 6, 8, 10, 12, 14
//

// 10만 * 5만 = 5억

// 17개
// 1 3 5 7 9 11 13 15
// 2 4 6 8 10 12 14 16
// 3 5 7 9 11 13 15 17
// 4 6 8 10 12 14 16 1
// 5 7 9 11 13 15 17 2
// 6 8 10 12 14 16 1 3
// 7 9 11 13 15 17 2 4
// 8 10 12 14 16 1 3 5
// 9 11 13 15 17 2 4 6
// 10 12 14 16 1 3 5 7
// 11 13 15 17 2 4 6 8
// 12 14 16 1 3 5 7 9
// 13 15 17 2 4 6 8 10
// 14 16 1 3 5 7 9 11
// 15 17 2 4 6 8 10 12
// 16 1 3 5 7 9 11 13
// 17 2 4 6 8 10 12 14

// 1 3 5 7 9 11 13 15
// 1 3 5 7 9 11 13 16
// 1 3 5 7 9 11 14 16
// 1 3 5 7 9 12 14 16
// 1 3 5 7 10 12 14 16
// 1 3 5 8 10 12 14 16
// 1 3 6 8 10 12 14 16
// 1 4 6 8 10 12 14 16

// 2 4 6 8 10 12 14 16
// 2 4 6 8 10 12 14 17
// 2 4 6 8 10 12 15 17
// 2 4 6 8 10 13 15 17
// 2 4 6 8 11 13 15 17
// 2 4 6 9 11 13 15 17
// 2 4 7 9 11 13 15 17
// 2 5 7 9 11 13 15 17

// 3 5 7 9 11 13 15 17
